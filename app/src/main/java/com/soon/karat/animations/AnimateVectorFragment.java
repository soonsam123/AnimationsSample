package com.soon.karat.animations;

import android.graphics.drawable.AnimatedVectorDrawable;
import android.graphics.drawable.Drawable;
import android.os.Build;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.graphics.drawable.AnimatedVectorDrawableCompat;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;

public class AnimateVectorFragment extends Fragment {

    ImageButton button;
    boolean flag = true;

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {

        View view = inflater.inflate(R.layout.fragment_animate_vector, container, false);

        button = view.findViewById(R.id.button_avd_check_cancel);

        createCheckCancelAnimation();

        return view;
    }

    /**
     * This method animate a check/cancel image inside an {@link ImageButton}.
     * </p>
     * The {@link #flag} boolean is used in order to invert the animation, the
     * first time the user clicks it will run the animation from check --> cancel
     * {@link R.drawable#avd_check_cancel} and the second time the user clicks
     * it will run from cancel --> check {@link R.drawable#avd_cancel_check}.
     * </p>
     * Then, we create a {@link Drawable} variable that will get the drawable
     * from the button. We already set an animated vector drawable to the
     * {@link ImageButton} in {@link R.layout#activity_animate_vector} in
     * app:srcCompat attribute. In order to do that you can not forget
     * to add "vectorDrawables.useSupportLibrary = true" to your build.gradle
     * module app file in defaultConfig{}.
     * </p>
     * The {@link R.drawable#avd_check_cancel} and {@link R.drawable#avd_cancel_check}
     * files were generated by using the amazing website https://shapeshifter.design/
     * The information was taken from Android Documentation: https://developer.android.com/guide/topics/graphics/vector-drawable-resources#vector-drawables-backward-solution
     * and from an excellent portuguese video class: https://www.youtube.com/watch?v=inSVnqXZGAQ&t=0s&list=PLZPjO06NBzlJmSdYDbT1JP4c9bLIAqLys&index=18
     */
    private void createCheckCancelAnimation() {
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (flag) {
                    button.setImageResource(R.drawable.avd_check_cancel);
                } else {
                    button.setImageResource(R.drawable.avd_cancel_check);
                }
                flag = !flag;
                Drawable drawable = button.getDrawable();
                if (Build.VERSION.SDK_INT >= 21){ //  Class supported only in API 21 and greater.
                    Log.i("Animating", "onClick: Animating for NEW API");
                    if (drawable instanceof AnimatedVectorDrawable) {
                        ((AnimatedVectorDrawable) drawable).start();
                    }
                } else { // Use Compat class for older versions.
                    Log.i("Animating", "onClick: Animating for OLD API");
                    if (drawable instanceof AnimatedVectorDrawableCompat) {
                        ((AnimatedVectorDrawableCompat) drawable).start();
                    }
                }
            }
        });
    }

}
